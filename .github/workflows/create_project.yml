name: Create Project Folder
on:
  repository_dispatch:
    types: [create-project]
jobs:
  create-folder:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Create project folder structure
        run: |
          mkdir -p "${PROJECT_NAME}" "projects"
          # Check if preview.png exists in file_metadata
          PREVIEW_EXISTS=$(echo "$FILE_METADATA" | python -c "import json, sys; files = json.loads(sys.stdin.read()); print('true' if any(f['path'] == 'preview.png' for f in files) else 'false')")
          if [ "$PREVIEW_EXISTS" != "true" ]; then
            echo "Error: preview.png not provided"
            exit 1
          fi
          ONLY_PAINT_FILES=$(echo "$FILE_METADATA" | python -c "import json, sys; files = json.loads(sys.stdin.read()); print('true' if all(f['path'].endswith(('.png', '.pdn')) for f in files if f['path'] != 'preview.png') else 'false')")
          if [ "$ONLY_PAINT_FILES" = "true" ]; then
            python create_project_json.py "${PROJECT_NAME}" "$FILE_METADATA"
            zip -r "${PROJECT_NAME}/Инферно.zip" "${PROJECT_NAME}" -x "${PROJECT_NAME}/preview.png"
          else
            mkdir -p "${PROJECT_NAME}/Итог" "${PROJECT_NAME}/other"
            python create_project_json.py "${PROJECT_NAME}" "$FILE_METADATA"
            zip -r "${PROJECT_NAME}/${PROJECT_NAME}.zip" "${PROJECT_NAME}/Итог" "${PROJECT_NAME}/other"
          fi
        env:
          PROJECT_NAME: ${{ github.event.client_payload.project_name }}
          FILE_METADATA: ${{ github.event.client_payload.file_metadata }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit changes
        run: |
          git config user.name "Endermanik13"
          git config user.email "endermanik13@example.com"
          git add .
          git commit -m "Create project: ${PROJECT_NAME} with JSON and ZIP"
          git push origin main
        env:
          PROJECT_NAME: ${{ github.event.client_payload.project_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
